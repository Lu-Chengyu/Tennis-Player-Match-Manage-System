name: Tennis-Player-Match-Manage-System

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-20.04
    # strategy:
    #   matrix:
    #     mongodb-version: ['8.0']
        
    # services:
    #   mongodb:
    #     image: mongo:4.4.6
    #     env:
    #       MONGO_INITDB_ROOT_USERNAME: admin
    #       MONGO_INITDB_ROOT_PASSWORD: admin
    #       MONGO_INITDB_DATABASE: Tennis-Player-Match-Manage-System
    #     ports:
    #       - 27017:27017
    #     options: >-
    #       --health-cmd mongo
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5
          
    # services:
    #   mongo:
    #     image: mongo:latest
    #     ports:
    #       - 27017:27017
        # options: >-
        #   --health-cmd "mongo --eval 'db.runCommand(\"ping\").ok'"
        #   --health-interval 10s
        #   --health-timeout 5s
        #   --health-retries 10
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # - name: Install mongosh
      #   run: |
      #     sudo apt-get install gnupg
      #     wget -qO- https://www.mongodb.org/static/pgp/server-7.0.asc | sudo tee /etc/apt/trusted.gpg.d/server-7.0.asc
      #     echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
      #     sudo apt-get update
      #     sudo apt-get install -y mongodb-mongosh
      #     mongosh --version

      # - name: Initalize MongoDB
      #   run: |
      #     mongosh --host localhost:27017 -u admin -p admin --authenticationDatabase admin <<EOF
      #       db = db.getSiblingDB('APP-DB');
      #       db.createUser({ user: 'APP-USERNAME', pwd: 'APP-PASSWORD', roles: [{ role: 'readWrite', db: 'APP-DB' }] })
      #       db.createCollection('APP-COLLECTION');
      #     EOF
      #     # Do whatever you like in here
          
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.11.0
        with:
          mongodb-version: 8.0

      - name: Install dependencies
        run: npm install

      # - name: Wait for MongoDB to be ready
      #   run: |
      #     echo "Waiting for MongoDB to be ready..."
      #     for i in {1..30}; do
      #       mongo --eval "db.runCommand('ping').ok" && echo "MongoDB is ready" && exit 0
      #       echo "Waiting for MongoDB... ($i/30)"
      #       sleep 5
      #     done
      #     echo "MongoDB did not become ready in time" && exit 1

      - name: Run tests
        run: npm test

      - name: Start server
        run: node ./serverREST.js

      - name: Wait for server to start
        run: sleep 10

      - name: Verify deployment
        run: curl --fail http://localhost:3000/players.html

      - name: Deploy to GitHub Pages
        if: success()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
